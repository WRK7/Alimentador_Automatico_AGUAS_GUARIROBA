"""
Teste de diagn√≥stico do dropdown
"""

from automacao import AlimentadorAutomatico

def testar_diagnostico_dropdown():
    """Testa apenas o diagn√≥stico do dropdown"""
    print("üî¨ TESTE DE DIAGN√ìSTICO DO DROPDOWN")
    print("=" * 50)
    
    alimentador = AlimentadorAutomatico()
    
    try:
        # 1. Iniciar navegador
        print("1Ô∏è‚É£ Iniciando navegador...")
        alimentador.iniciar_navegador(headless=False)
        
        # 2. Fazer login
        print("2Ô∏è‚É£ Fazendo login...")
        if not alimentador.fazer_login():
            print("‚ùå Falha no login")
            return False
        
        # 3. Clicar em Importar
        print("3Ô∏è‚É£ Clicando em Importar...")
        if not alimentador.encontrar_botao_importar():
            print("‚ùå Falha ao clicar em Importar")
            return False
        
        # 4. Fazer diagn√≥stico do dropdown
        print("4Ô∏è‚É£ Fazendo diagn√≥stico do dropdown...")
        if not alimentador.diagnosticar_dropdown():
            print("‚ùå Falha no diagn√≥stico")
            return False
        
        print("\n‚úÖ DIAGN√ìSTICO CONCLU√çDO!")
        print("üìã Verifique as informa√ß√µes acima para entender o tipo de dropdown")
        
        # Manter navegador aberto para inspe√ß√£o manual
        input("\n‚è∏Ô∏è  Pressione Enter para fechar o navegador...")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro durante teste: {e}")
        return False
        
    finally:
        alimentador.fechar_navegador()

if __name__ == "__main__":
    testar_diagnostico_dropdown()
